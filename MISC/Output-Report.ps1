Function Output-Report 
 {
    <#
        .SYNOPSIS
        Report Delivery Function
        .DESCRIPTION
        Delivers object as a report with specific type to the specific filename
        .PARAMETER
        $object = the object to deliver as a report
        $type = the type of report to deliver
            CSV
            XML
            HTML
            TEXT
        $filename = the filename to deliveer the report to
        .EXAMPLE
        output-report -type CSV -filename "C:\test\output.csv" -object $computers
            this would write a csv of the object $computers to the file "C:\test\output.csv"
        .NOTES
            FunctionName : Output-Report
            Created by   : Gary Cook
            Date Coded   : 08/30/2017 15:37:07

            Requires the Write-color function to work properly
    #>
 [CmdletBinding()]
 Param
     (
     [Parameter(Mandatory = $True, Position = 1, ValueFromPipelineByPropertyName = $True)]
	[object]$Object,
	[Parameter(Mandatory = $True, ValueFromPipelineByPropertyName = $True)]
	[string]$Type = "CSV",
	[Parameter(Mandatory = $True, ValueFromPipelineByPropertyName = $True)]
	[string]$FileName
     )
    
     #process the output based on how the users selected
        if ($Object -ne $null)
        {
            #export the findings in the report file
            write-color -text "Saving Object to report ", $Type, "as file ", $FileName -color Green, Yellow,Green,Yellow
	
	        if ($Type -eq "CSV")
	        {
		        Write-Color -Text "CSV Output Selected, saving File." -Color Green
		        $UserResults | export-csv -Path $FileName -NoTypeInformation
	        }
	        elseif ($Type -eq "XML")
	        {
		        Write-Color -Text "XML Output Selected, saving File." -Color Green
		        $UserResults | Export-Clixml -Path $FileName 
	        }
	        elseif ($Type -eq "HTML")
	        {
		        Write-Color -Text "HTML Output Selected, saving File." -Color Green
		        $UserResults | ConvertTo-Html -Title "Report" -Body "Report Created on @(get-date)" -PreContent "<p>Generated by Output-Report Function</p>" -PostContent "For More Information Please Contact your Administrator" |Out-File -FilePath $FileName 
	        }
	        elseif ($Type -eq "TEXT")
	        {
		        Write-Color -Text "TEXT Output Selected, saving File." -Color Green
		        $UserResults | Out-File -FilePath $FileName
	        }
	        else
	        {
		        write-host "No output Type was selected the default Grid will be used." -foregroundColor White -BackgroundColor Red
		        $UserResults | Out-GridView 
	        }
        }
        else
        {
	        write-color "The Object is null and nothing can be done." -color red
	        

	
        }

 }