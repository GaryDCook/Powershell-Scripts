<File version="3.2">
  <Code><![CDATA[#Define a Param block to use custom parameters in the project
#Param ($CustomParameter)

function Main {
<#
    .SYNOPSIS
        The Main function starts the project application.
    
    .PARAMETER Commandline
        $Commandline contains the complete argument string passed to the script packager executable.
    
    .NOTES
        Use this function to initialize your script and to call GUI forms.
		
    .NOTES
        To get the console output in the Packager (Forms Engine) use: 
		$ConsoleOutput (Type: System.Collections.ArrayList)
#>
	Param ([String]$Commandline)
		
	#--------------------------------------------------------------------------
	#TODO: Add initialization script here (Load modules and check requirements)
	
	
	#--------------------------------------------------------------------------
	
	#check and load azure ad preview module
	if (Get-Module -ListAvailable -Name AzureADPreview)
	{
		Write-Host "AzureADPreview Module Already Installed" -ForegroundColor Green
	}
	else
	{
		Write-Host "AzureADPreview Module Not Installed. Installing........." -ForegroundColor Red
		Install-Module -Name AzureADPreview -AllowClobber -Force
		Write-Host "AzureADPreview Module Installed" -ForegroundColor Green
	}
	Import-Module AzureADPreview
	
	if (Get-Module -ListAvailable -Name Microsoft.Graph)
	{
		Write-Host "MS Graph Module Module Already Installed" -ForegroundColor Green
	}
	else
	{
		Write-Host "MS Graph Module Module Not Installed. Installing........." -ForegroundColor Red
		Install-Module -Name Microsoft.Graph -AllowClobber -Force
		Write-Host "MS Graph Module Module Installed" -ForegroundColor Green
	}
	Import-Module Microsoft.Graph
	
	if((Show-MainForm_psf) -eq 'OK')
	{
		
	}
	
	$script:ExitCode = 0 #Set the exit code for the Packager
}

]]></Code>
</File>